def find_substring_positions(s, t):
    # Initialize an empty list to store the starting positions
    positions = []
    
    # Loop through `s` to find the starting positions where `t` matches
    for i in range(len(s) - len(t) + 1):
        # Check if substring of `s` starting at position `i` matches `t`
        if s[i:i + len(t)] == t:
            # Positions in biological context are often 1-based, so add 1 to `i`
            positions.append(i + 1)
    
    return positions

# Example usage
s = "GCATTCAGCCATACATTCAGCTACATTCAGCCATTCAGAAGAGCATTCAGCATTCAGGCATTCAGTGGTTTCTGCTTGACATTCAGCATTCAGGCAGTCAAGATTGGCTGCCATTCAGCGGAGTTCAGCATTCAGCATTCAGGGCTTACATTCAGCATTCAGGAAGCCATTCAGCATTCAGTTCATTCAGCACGGTGACACATTCAGTTGCCATTCAGCATTCAGCAACAGCATTCAGGTCATTCAGGTCATTCAGTGACATTCAGTACATTCAGCATTCAGCATTCAGCCATTCAGCTCATTCAGTCCATTCAGTCAGCCATTCAGCATTCAGCTGCCTCATCCATTCAGCTCATTCAGGGCCCATTCAGAACATTCAGCATTCAGGTCCATTCAGACGCATTCAGCATTCAGCAGAGACATTCAGCATTCAGGCATTCAGTAGGCCATTCAGGGCATTCAGATCCCCATTCAGCATTCAGCACATTCAGGCCGGCATTCAGGTCATTCAGCATTCAGTCCATTCAGATGGAGCATTCAGTACATTCAGCATTCAGGCGTTCATTCAGGGTTTGTACATTCAGGCCGACATTCAGCATTCAGGCCATTCAGTATAACGGTCCATTCAGAATGGTTCATTCAGCCAACATTCAGAGGCATTCAGCCATTCAGTTAGGCGGCCAAGCATTCAGGGACACATTCAGCATTCAGCATTCAGCATTCAGGACTCATTCAGCATTCAGAAACATTCAGTCCCATTCAGTCATTCAGCTCCATTCAGGATTCATTCAGCCCCTTCTTCATTCAGCATTCAGGCAACGGCTAACATTCAGGAGTGGTTTACATTCAGCCATTCAGCATTCAGCCCATTCAG"
t = "CATTCAGCA"
result = find_substring_positions(s, t)
print(" ".join(map(str, result)))